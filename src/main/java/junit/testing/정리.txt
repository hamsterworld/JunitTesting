- 2장. 단위 테스트란 무엇인가?

    단위 테스트는 3가지로 정리할수있다.

    1. 작은 코드 조각을 검증한다.
       => 우리가 sut 로 하나하나 작게 검증하듯이 이러한 작은 코드조각들을 검증한다는뜻.
    2. 빠르게 수행한다.
       => 말그대로 외부 프로세스없이 순수 자바코드로만 실행되야 가장빠르다.
    3. 격리된 방식으로 처리되야 한다.

    격리된 방식에대해서 런던파와 고전파의 차이란?

    공유의존성과 비공유의존성이란?

    필자가 말하기를 런던파가 고전파에 비해 선호되지 않는 이유는?

- 3장. 단위 테스트 구조

- 4장. 좋은 단위 테스트의 4대 요소

    1. 회귀방지
        1-1. 테스트중에 실행되는 코드양
        1-2. 코드 복잡도
        1-3. 도메인 유의성

    2. 리팩터링 내성
        거짓양성
        => 결과에 주목하지못하고 내부구현에 집중하면 리팩터링내성은 완전히 0 이다.

    3. 빠른 피드백

    4. 유지보수성

 단위테스트 -> 통합테스트 -> 엔드투엔드테스트

 1. 오른쪽으로 갈수록 회귀방지는 높아지나 빠른피드백효과는 낮아진다.
 2. 리팩토링내성은 둘중 하나이다. 무조건있거나 무조건없거나. 그러므로 항상 최대치를 할수있도록 해야한다.
 3. 회귀방지와 빠른피드백에서 어느게 더 나을지 생각해야한다.

 화이트박스Test vs 블랙박스Test

 화이트박스는 내부구현까지 확인한다고 보면 편하다.
 블랙박스는 출력만을 확인한다.
 우리는 리팩토링내성을 포기할수없다 그러므로, 항상 화이트박스테스트가 기본이되고 우선시되야한다.


